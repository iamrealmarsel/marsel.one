@use '@styles/constants' as const;
@use '@styles/grid';

$_duration: 0.3s;

.preview {
  overflow: hidden;
  position: relative;
  transition: 0.1s transform;

  // &:before {
  //   $_position: -5px;
  //   content: '';
  //   opacity: 0;
  //   position: absolute;
  //   top: $_position;
  //   left: $_position;
  //   right: $_position;
  //   bottom: $_position;
  //   box-shadow: 0 0 0 5px #07ffc9;
  //   background-color: #ffc107;
  //   transition: 0.3s opacity;
  // }

  &:hover {
    z-index: 10;

    &:before {
      opacity: 1;
    }
  }
}

.overlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  display: flex;
  flex-direction: column;
  background-color: var(--color-yellow-alpha1);
  transform: translate3d(0, 100%, 0);
}

.linkPreview {
  display: block;
  width: 100%;
  flex-grow: 1;
  font-size: 0;
}

.tags {
  padding: 0 10px;
  color: var(--color-black);
}

.icons {
  display: flex;
  align-items: center;
}

.linkWebsite,
.linkGithub {
  box-sizing: content-box;
  width: 24px;
  padding: 0px 10px;
}

.info {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  width: 100%;
  padding: 10px 0;
  background-color: var(--color-yellow-alpha2);
}

.overlay.inTop {
  animation: inTop $_duration forwards;
}

.overlay.inBottom {
  animation: inBottom $_duration forwards;
}

.overlay.inLeft {
  animation: inLeft $_duration forwards;
}

.overlay.inRight {
  animation: inRight $_duration forwards;
}

.overlay.outTop {
  animation: outTop $_duration forwards;
}

.overlay.outBottom {
  animation: outBottom $_duration forwards;
}

.overlay.outLeft {
  animation: outLeft $_duration forwards;
}

.overlay.outRight {
  animation: outRight $_duration forwards;
}

// ----- in -----

@keyframes inTop {
  0% {
    transform: translate3d(0, -100%, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes inBottom {
  0% {
    transform: translate3d(0, 100%, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes inLeft {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes inRight {
  0% {
    transform: translate3d(100%, 0, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

// ----- out -----

@keyframes outTop {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(0, -100%, 0);
  }
}

@keyframes outBottom {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(0, 100%, 0);
  }
}

@keyframes outLeft {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes outRight {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(100%, 0, 0);
  }
}

// ----- grid -----

@for $i from 1 through 3 {
  .item:nth-child(7n + #{$i}) {
    @include grid.setColSize(
      (
        const.$xxl: 4,
      ),
      true
    );
  }
}

@for $i from 4 through 7 {
  .item:nth-child(7n + #{$i}) {
    @include grid.setColSize(
      (
        const.$xxl: 3,
      ),
      true
    );
  }
}

@for $i from 1 through 2 {
  .item:nth-child(5n + #{$i}) {
    @include grid.setColSize(
      (
        const.$md: 6,
        const.$xs: 12,
      ),
      true
    );
  }
}

@for $i from 3 through 5 {
  .item:nth-child(5n + #{$i}) {
    @include grid.setColSize(
      (
        const.$md: 4,
        const.$sm: 6,
        const.$xs: 12,
      ),
      true
    );
  }
}
