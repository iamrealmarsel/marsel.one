@use '@styles/breakpoints.scss' as bp;
@use '@styles/constants.scss' as const;

$_gridCols: 12;

$maxWidth_xxl: 1390px;
$maxWidth_xl: 1190px;
$maxWidth_lg: 982px;
$maxWidth_md: 758px;
$maxWidth_sm: 566px;

$_max_width_list: (
  const.$xxl: $maxWidth_xxl,
  const.$xl: $maxWidth_xl,
  const.$lg: $maxWidth_lg,
  const.$md: $maxWidth_md,
  const.$sm: $maxWidth_sm,
);

@mixin setContainer($_paddingList: null, $_limited: false) {
  width: 100%;
  margin: 0 auto;

  @if $_paddingList {
    @include _setContainerPadding($_paddingList);
  }

  @if $_limited {
    @include _setContainerSize();
  } @else {
    max-width: $maxWidth_xxl;
  }
}

@mixin setRow() {
  display: flex;
  flex-wrap: wrap;
}

@mixin setRowGutter($_gutterXList: null, $_gutterYList: null) {
  @if $_gutterXList {
    @each $_bp, $_gutter in $_gutterXList {
      @include bp.usebp($_bp) {
        --gutterX: #{$_gutter};
        margin-left: calc(var(--gutterX) / -2);
        margin-right: calc(var(--gutterX) / -2);

        > * {
          padding-left: calc(var(--gutterX) / 2);
          padding-right: calc(var(--gutterX) / 2);
        }
      }
    }
  }

  @if $_gutterYList {
    @each $_bp, $_gutter in $_gutterYList {
      @include bp.usebp($_bp) {
        --gutterY: #{$_gutter};
        margin-top: calc(var(--gutterY) * -1);

        > * {
          margin-top: var(--gutterY);
        }
      }
    }
  }
}

@mixin setRowCols($_colsList) {
  > * {
    flex: 0 0 auto;

    @each $_bp, $_amount in $_colsList {
      @include bp.usebp($_bp) {
        width: 100% / $_amount;
      }
    }
  }
}

@mixin setColSize($_colSizeList, $_bootstrap: false) {
  flex: 0 0 auto;

  @if $_bootstrap {
    @include _setBootstrapColSize($_colSizeList);
  } @else {
    @include _setUnitColSize($_colSizeList);
  }
}

@mixin _setContainerSize() {
  @each $_bp, $_max_width in $_max_width_list {
    @include bp.usebp($_bp) {
      max-width: $_max_width;
    }
  }
}

@mixin _setContainerPadding($_paddingList) {
  @each $_bp, $_padding in $_paddingList {
    @include bp.usebp($_bp) {
      padding-left: $_padding;
      padding-right: $_padding;
    }
  }
}

@mixin _setUnitColSize($_colSizeList) {
  @each $_bp, $_size in $_colSizeList {
    @include bp.usebp($_bp) {
      width: $_size;
    }
  }
}

@mixin _setBootstrapColSize($_colSizeList) {
  @each $_bp, $_size in $_colSizeList {
    @include bp.usebp($_bp) {
      width: 100% / $_gridCols * $_size;
    }
  }
}
